// <auto-generated />
using DevoraLimeTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevoraLimeTest.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DevoraLimeTest.Data.Models.Arena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NumOfHeroes")
                        .HasColumnType("int");

                    b.Property<bool>("inFight")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Arenas");
                });

            modelBuilder.Entity("DevoraLimeTest.Data.Models.Fight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AttackerEndHP")
                        .HasColumnType("int");

                    b.Property<int>("AttackerID")
                        .HasColumnType("int");

                    b.Property<int>("AttackerStartHP")
                        .HasColumnType("int");

                    b.Property<int>("DeffenderEndHP")
                        .HasColumnType("int");

                    b.Property<int>("DeffenderID")
                        .HasColumnType("int");

                    b.Property<int>("DeffenderStartHP")
                        .HasColumnType("int");

                    b.Property<int>("HistoryID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackerID");

                    b.HasIndex("DeffenderID");

                    b.HasIndex("HistoryID");

                    b.ToTable("Fights");
                });

            modelBuilder.Entity("DevoraLimeTest.Data.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArenaID")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArenaID");

                    b.HasIndex("TypeID");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("DevoraLimeTest.Data.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArenaID")
                        .HasColumnType("int");

                    b.Property<int>("NumOfFights")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArenaID");

                    b.ToTable("History");
                });

            modelBuilder.Entity("DevoraLimeTest.Data.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MaxHP")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxHP = 100,
                            Name = "Archer"
                        },
                        new
                        {
                            Id = 2,
                            MaxHP = 150,
                            Name = "Knight"
                        },
                        new
                        {
                            Id = 3,
                            MaxHP = 120,
                            Name = "SwordsMan"
                        });
                });

            modelBuilder.Entity("DevoraLimeTest.Data.Models.Fight", b =>
                {
                    b.HasOne("DevoraLimeTest.Data.Models.Hero", "Attacker")
                        .WithMany()
                        .HasForeignKey("AttackerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevoraLimeTest.Data.Models.Hero", "Deffender")
                        .WithMany()
                        .HasForeignKey("DeffenderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevoraLimeTest.Data.Models.History", null)
                        .WithMany("Fights")
                        .HasForeignKey("HistoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attacker");

                    b.Navigation("Deffender");
                });

            modelBuilder.Entity("DevoraLimeTest.Data.Models.Hero", b =>
                {
                    b.HasOne("DevoraLimeTest.Data.Models.Arena", null)
                        .WithMany("Heroes")
                        .HasForeignKey("ArenaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevoraLimeTest.Data.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DevoraLimeTest.Data.Models.History", b =>
                {
                    b.HasOne("DevoraLimeTest.Data.Models.Arena", null)
                        .WithMany("Histories")
                        .HasForeignKey("ArenaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevoraLimeTest.Data.Models.Arena", b =>
                {
                    b.Navigation("Heroes");

                    b.Navigation("Histories");
                });

            modelBuilder.Entity("DevoraLimeTest.Data.Models.History", b =>
                {
                    b.Navigation("Fights");
                });
#pragma warning restore 612, 618
        }
    }
}
